/* SPDX-License-Identifier: AGPL-3.0-or-later */
/* This file is part of yagips.

Â©2024 Alex Pensinger (ArcticLuma113)

This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

syntax = "proto3";

package proto;

import "block_info.proto";
import "dispatch.proto";

message TrackingIOInfo {
    string appid = 1;
    string deviceid = 2;
    string mac = 3;
    string rydevicetype = 4;
    string client_tz = 5;
}

message PlayerLoginReq {
    string token = 1;
    string client_version = 2;
    string system_version = 3;
    string device_name = 4;
    string device_uuid = 5;
    uint32 target_uid = 6;
    uint64 login_rand = 7;
    bool is_editor = 8;
    uint32 language_type = 9;
    uint32 account_type = 10;
    string account_uid = 11;
    string platform = 12;
    string device_info = 13;
    uint32 platform_type = 14;
    bool is_guest = 15;
    uint32 cloud_client_ip = 16;
    uint32 gm_uid = 17;
    string checksum = 18;
    string online_id = 19;
    uint32 client_token = 20;
    bytes security_cmd_reply = 21;
    bytes extra_bin_data = 22;
    string cps = 23;
    uint32 channel_id = 24;
    uint32 sub_channel_id = 25;
    string checksum_client_version = 26;
    uint32 tag = 27;
    TrackingIOInfo tracking_io_info = 28;
    string country_code = 29;
    uint32 client_data_version = 30;
    bytes environment_error_code = 31;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 103;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ShortAbilityHashPair {
    sfixed32 ability_name_hash = 1;
    sfixed32 ability_config_hash = 2;
}

message PlayerLoginRsp {
    int32 retcode = 1;
    bytes player_data = 2;
    bool is_new_player = 3;
    uint32 target_uid = 4;
    uint64 login_rand = 5;
    bool is_use_ability_hash = 6;
    int32 ability_hash_code = 7;
    map<string, int32> ability_hash_map = 8;
    uint32 client_data_version = 9;
    bool is_relogin = 11;
    uint32 client_silence_data_version = 13;
    string game_biz = 14;
    uint32 player_data_version = 15;
    string client_md5 = 16;
    string client_silence_md5 = 17;
    ResVersionConfig res_version_config = 20;
    map<uint32, BlockInfo> block_info_map = 21;
    string client_version_suffix = 24;
    string client_silence_version_suffix = 25;
    repeated ShortAbilityHashPair short_ability_hash_map = 27;
    bytes sc_info = 28;
    bool is_audit = 29;
    bool is_sc_open = 30;
    string register_cps = 31;
    repeated FeatureBlockInfo feature_block_info_list = 32;
    bool is_data_need_relogin = 33;
    string country_code = 34;
    ResVersionConfig next_res_version_config = 35;
    string next_resource_url = 36;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 104;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
