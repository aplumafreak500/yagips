/* SPDX-License-Identifier: AGPL-3.0-or-later */
/* This file is part of yagips.

Â©2024 Alex Pensinger (ArcticLuma113)

This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

syntax = "proto3";

package proto;

import "define.proto";

message MailChangeNotify {
    repeated MailData mail_list = 1;
    repeated uint32 del_mail_id_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1402;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ReadMailNotify {
    repeated uint32 mail_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1403;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetMailItemReq {
    repeated uint32 mail_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1404;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetMailItemRsp {
    int32 retcode = 1;
    repeated uint32 mail_id_list = 2;
    repeated EquipParam item_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1405;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message DelMailReq {
    repeated uint32 mail_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1406;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message DelMailRsp {
    int32 retcode = 1;
    repeated uint32 mail_id_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1407;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetAuthkeyReq {
    string auth_appid = 1;
    uint32 sign_type = 2;
    uint32 authkey_ver = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1408;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetAuthkeyRsp {
    int32 retcode = 1;
    string authkey = 2;
    string auth_appid = 3;
    uint32 sign_type = 4;
    uint32 authkey_ver = 5;
    string game_biz = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1409;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ClientNewMailNotify {
    uint32 not_read_num = 1;
    uint32 not_got_attachment_num = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1410;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetAllMailReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1411;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetAllMailRsp {
    int32 retcode = 1;
    repeated MailData mail_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1412;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum AuthkeySignType {
    AUTHKEY_SIGN_TYPE_NONE = 0;
    AUTHKEY_SIGN_TYPE_DEFAULT = 1;
    AUTHKEY_SIGN_TYPE_RSA = 2;
}
