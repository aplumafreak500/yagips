/* SPDX-License-Identifier: AGPL-3.0-or-later */
/* This file is part of yagips.

Â©2024 Alex Pensinger (ArcticLuma113)

This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

syntax = "proto3";

package proto;

message MainCoop {
    uint32 id = 1;
    
    Status status = 2;
    enum Status {
        INVALID = 0;
        RUNNING = 1;
        FINISHED = 2;
    }
    
    repeated uint32 save_point_id_list = 3;
    int32 self_confidence = 4;
    map<uint32, int32> normal_var_map = 5;
    map<uint32, int32> temp_var_map = 6;
    map<uint32, uint32> seen_ending_map = 7;
}

message AllCoopInfoNotify {
    repeated MainCoop main_coop_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1951;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MainCoopUpdateNotify {
    repeated MainCoop main_coop_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1952;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SaveMainCoopReq {
    uint32 id = 1;
    uint32 save_point_id = 2;
    uint32 self_confidence = 3;
    map<uint32, int32> normal_var_map = 4;
    map<uint32, int32> temp_var_map = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1953;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SaveMainCoopRsp {
    int32 retcode = 1;
    uint32 id = 2;
    repeated uint32 save_point_id_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1954;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FinishMainCoopReq {
    uint32 id = 1;
    uint32 ending_save_point_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1955;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message FinishMainCoopRsp {
    int32 retcode = 1;
    uint32 id = 2;
    uint32 ending_save_point_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1956;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
