/* SPDX-License-Identifier: AGPL-3.0-or-later */
/* This file is part of yagips.

Â©2024 Alex Pensinger (ArcticLuma113)

This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

syntax = "proto3";

package proto;

import "scene.proto";

message PrivateChatReq {
    uint32 target_uid = 1;
    
    oneof content {
        string text = 2;
        uint32 icon = 3;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4951;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PrivateChatRsp {
    int32 retcode = 1;
    uint32 chat_forbidden_endtime = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4952;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PrivateChatNotify {
    ChatInfo chat_info = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4953;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PrivateChatSetSequenceReq {
    uint32 target_uid = 1;
    uint32 sequence = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4954;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PrivateChatSetSequenceRsp {
    int32 retcode = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4955;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PullPrivateChatReq {
    uint32 target_uid = 1;
    uint32 from_sequence = 2;
    uint32 pull_num = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4956;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PullPrivateChatRsp {
    int32 retcode = 1;
    repeated ChatInfo chat_info = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4957;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PullRecentChatReq {
    uint32 begin_sequence = 1;
    uint32 pull_num = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4958;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PullRecentChatRsp {
    int32 retcode = 1;
    repeated ChatInfo chat_info = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4959;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ReadPrivateChatReq {
    uint32 target_uid = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4960;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ReadPrivateChatRsp {
    int32 retcode = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4961;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
